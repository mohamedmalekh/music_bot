# .github/workflows/bot_runner.yml
name: Run Telegram Music Bot

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  run-bot:
    runs-on: ubuntu-latest

    env:
      HIST_FILE: processed.json
      YTDLP_COOKIES_FILE: cookies.txt

    steps:
      # 1) Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Debug: lister tous les fichiers
      - name: Debug list files
        run: |
          echo "üìÇ Working dir: $(pwd)"
          ls -la
          echo "üìÅ Recursive listing:"
          ls -R .

      # 3) Setup Python et cache pip
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      # 4) Installer ffmpeg
      - name: Install ffmpeg
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends ffmpeg

      # 5) Installer les d√©pendances Python
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 6) D√©code le secret base64 en cookies.txt
      - name: Write cookies.txt from secret (base64 decode)
        shell: bash
        run: |
          echo "${{ secrets.YTDLP_COOKIES_B64 }}" | base64 -d > cookies.txt

      # 7) Debug: v√©rifier le d√©but de cookies.txt
      - name: Debug cookies.txt head
        shell: bash
        run: |
          echo "---- D√©but de cookies.txt ----"
          head -n5 cookies.txt
          echo "---- Fin debug ----"

      # 8) Lancer le script bot.py
      - name: Run the bot script
        env:
          TELEGRAM_BOT_TOKEN:    ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_GROUP_ID:     ${{ secrets.TELEGRAM_GROUP_ID }}
          SPOTIFY_CLIENT_ID:     ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        run: |
          echo "üöÄ Starting bot.py"
          python bot.py

      # 9) Configurer Git pour le commit
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 10) V√©rifier si processed.json a chang√©
      - name: Check for changes in history file
        id: git-check
        run: |
          if git diff --quiet processed.json; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      # 11) Commit & push processed.json si modifi√©
      - name: Commit and push history file if changed
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git add processed.json
          git commit -m "chore: update processed.json [skip ci]"
          for i in 1 2 3; do
            git push && break || sleep 15
          done
