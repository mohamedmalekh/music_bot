name: Run Telegram Music Bot

on:
  schedule:
    # Toutes les 2 heures (INTERVAL_SECONDS = 2h dans bot.py)
    - cron: '0 */2 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  run-bot:
    runs-on: ubuntu-latest
    # Timeout Ã  30 minutes pour Ã©viter un job qui traÃ®ne
    timeout-minutes: 30

    env:
      # Ton fichier dâ€™historique
      HIST_FILE: history.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip

      - name: Install ffmpeg
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends ffmpeg

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run one iteration of bot
        env:
          TELEGRAM_BOT_TOKEN:    ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_GROUP_ID:     ${{ secrets.TELEGRAM_GROUP_ID }}
          SPOTIFY_CLIENT_ID:     ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          YTDLP_COOKIES_B64:     ${{ secrets.YTDLP_COOKIES_B64 }}
        run: |
          echo "ðŸš€ Running a single check pass"
          python -c 'import asyncio, bot; asyncio.run(bot.run_checks())'

      - name: Commit & push history.json if changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if git diff --quiet history.json; then
            echo "No history changes."
          else
            git add history.json
            git commit -m "chore: update history.json [skip ci]"
            git push
          fi
